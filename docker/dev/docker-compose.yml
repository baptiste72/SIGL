version: "3.9"
services:
  angular:
    build:
      context: ./../..
      dockerfile: ./docker/dev/front-dev/Dockerfile
    container_name: angular
    ports:
      - "80:4200"
    volumes:
      - ./../../front:/sigl
    restart: always

  db:
    image: postgres
    volumes:
      - ./../../database/data/db:/var/lib/postgresql/data
    expose:
      - "5433" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - "5433:5433"
    command: -p 5433
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  django:
    build:
      context: ./../..
      dockerfile: ./docker/dev/back-dev/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000 
    volumes:
      - ./../../back/siglback:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  sonarqube:
    image: sonarqube:alpine
    container_name: sonarqube
    depends_on:
      - db_sonar
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonartest
      SONAR_JDBC_PASSWORD: sonartest
    volumes:
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_data:/opt/sonarqube/data
    ports:
      - "9000:9000"
  db_sonar:
    image: postgres:12
    container_name: 
      sonarqubedb
    environment:
      POSTGRES_USER: sonartest
      POSTGRES_PASSWORD: sonartesrt
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  sonarscanner:
    build:
      context: ./../..
      dockerfile: ./docker/dev/sonarscanner/Dockerfile
    container_name: sonarscanner

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql:
  postgresql_data: