version: "3.9"
services:
  angular:
    build:
      context: ./../..
      dockerfile: ./docker/dev/front-dev/Dockerfile
    container_name: angular
    ports:
      - "80:4200"
    volumes:
      - ./../../frontend:/sigl
      - /sigl/node_modules
    restart: always

  django:
    build:
      context: ./../..
      dockerfile: ./docker/dev/back-dev/Dockerfile
    container_name: django
    ports:
      - "8000:8000"
    volumes:
      - ./../../backend:/sigl
    environment:
      POSTGRES_NAME: ${DJANGO_DB}
      POSTGRES_USER: ${DJANGO_USER}
      POSTGRES_PASSWORD: ${DJANGO_PASSWORD}
    depends_on:
      - django-db
    restart: always

  django-db:
    image: postgres:alpine
    container_name: django-db
    command: -p 5433
    volumes:
      - django_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DJANGO_DB:?err}
      POSTGRES_USER: ${DJANGO_USER:?err}
      POSTGRES_PASSWORD: ${DJANGO_PASSWORD:?err}
    restart: always

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: ${SONAR_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
    depends_on:
      - sonarqube-db
    restart: always

  sonarqube-db:
    image: postgres:alpine
    container_name: sonarqube-db
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${SONAR_USER:?err}
      POSTGRES_PASSWORD: ${SONAR_PASSWORD:?err}
    restart: always

  sonarscanner:
    build:
      context: ./../..
      dockerfile: ./docker/dev/sonarscanner/Dockerfile
    container_name: sonarscanner
    restart: always

volumes:
  django_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql:
  postgresql_data:
